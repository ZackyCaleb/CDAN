import argparse
parser = argparse.ArgumentParser(description="CDAN")
parser.add_argument('--learning_rate', type=float, default=2.25e-05, help='Learning rate (default: 2.25e-05)')
parser.add_argument('--beta1', type=float, default=0.5, help='beta1 for Adam optimizer')
parser.add_argument('--beta2', type=float, default=0.999, help='beta2 for Adam optimizer')
parser.add_argument('--au', type=int, default=6, help='involved facial action units (default: 6)')
# parser.add_argument('--images_dir', type=str, default=r'./dataset/affect_HaSa/imgs', help='Path to traindata')
parser.add_argument('--images_dir', type=str, default=r'.\Affect\affect_HaSa_segface', help='Path to traindata')
# parser.add_argument('--images_dir', type=str, default=r'./dataset/KDEF', help='Path to traindata')
# parser.add_argument('--images_dir', type=str, default=r'./dataset/oulu_image/train', help='Path to validdata')
# parser.add_argument('--images_dir', type=str, default=r'./dataset/oulu_image/test', help='Path to validdata')
parser.add_argument('--epochs', type=int, default=50, help='Number of epochs to train (default: 50)')
parser.add_argument('--image_size', type=int, default=112, help='Number of epochs to train (default: 50)')
parser.add_argument('--batch_size', default=12, type=int, help='Batch size per GPU')
parser.add_argument('--device', default='cuda', help='device to use for training / testing')
parser.add_argument('--start_epoch', type=int, default=0, help='Number of epochs to train (default: 50)')
parser.add_argument('--fold', type=int, default=1, help='Number of epochs to train (default: 50)')
parser.add_argument('--save_rec', type=str, default=r'./save_rec')
parser.add_argument('--save_check', type=str, default=r'./save_check')
parser.add_argument('--pkl_dir', type=str, default=r'.\affect_HaSa_au.pkl')
parser.add_argument('--nGPU', default="0", type=str, help='which GPUs for training')
parser.add_argument('--mode', type=str, default='train', choices=['train', 'rec'])
parser.add_argument('--num_workers', default=2, type=int, help='Number of subprocesses to to load data')
parser.add_argument('--num_iters', type=int, default=2, help='number of total iterations for training D')

args = parser.parse_args()